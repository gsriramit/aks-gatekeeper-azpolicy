apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8sazurepodspreadconstraintsenforced
spec:
  crd:
    spec:
      names:
        kind: K8sAzurePodSpreadConstraintsEnforced
      validation:
        # Schema for the `parameters` field
        openAPIV3Schema:
          properties:
            excludedContainers:
              type: array
              items:
                type: string
            excludedImages:
              description: >-
                Any container that uses an image that matches an entry in this list will be excluded
                from enforcement. Prefix-matching can be signified with `*`. For example: `my-image-*`.
                It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name)
                in order to avoid unexpectedly excluding images from an untrusted repository.
              type: array
              items:
                type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8sazurepodspreadconstraintsenforced        

        # The following scenerios will be viewed as violations
        ## absence of the topologySpreadConstraints property in the pod spec
        ## topologySpreadConstraints property is present but there arent valid constraints defined within the array (count(arr) ==0)

        violation[{"msg": msg, "details": {}}] {            
            spec := input.review.object.spec
            not podSpreadConstraintDefined(spec)            
            msg := sprintf("At least 1 spread constraint needs to be defined: %v", [input.review.object.metadata.name])   
        }

        has_key(x, k) { 
          # https://www.openpolicyagent.org/docs/latest/policy-reference/#types
          #_ = x[k]
          type_name(x[k])
        }

        podSpreadConstraintDefined(spec) {	 
            has_key(spec,"topologySpreadConstraints")
        }

        SpreadConstraintsEmpty(spec) {
              constraintcount:= count(spec.topologySpreadConstraints) 
              constraintcount == 0
        }